#define RandomStep(DX,DY,STEP,OSTEP,DIE,ODIE)	\
  {						\
    <rate STEP>;				\
    <overload OSTEP>;				\
    loc orig(0,0);				\
    loc next(DX,DY);				\
    temp swap;					\
    if next.type = empty;			\
    do swap = next;				\
    do next = orig <fail DIE> <overload ODIE>;	\
    do orig = swap;				\
  }						\

#define MooreWalk(STEP,OSTEP,DIE,ODIE)		\
  RandomStep(+1,0,STEP,OSTEP,DIE,ODIE);		\
  RandomStep(-1,0,STEP,OSTEP,DIE,ODIE);		\
  RandomStep(0,+1,STEP,OSTEP,DIE,ODIE);		\
  RandomStep(0,-1,STEP,OSTEP,DIE,ODIE);		\

#define BishopWalk(STEP,OSTEP,DIE,ODIE)		\
  RandomStep(+1,+1,STEP,OSTEP,DIE,ODIE);	\
  RandomStep(-1,+1,STEP,OSTEP,DIE,ODIE);	\
  RandomStep(+1,-1,STEP,OSTEP,DIE,ODIE);	\
  RandomStep(-1,-1,STEP,OSTEP,DIE,ODIE);	\

#define NeumannWalk(STEP,OSTEP,DIE,ODIE)	\
  MooreWalk(STEP,OSTEP,DIE,ODIE);		\
  BishopWalk(STEP,OSTEP,DIE,ODIE);		\

#define CementSetDir(DX,DY,DRYRATE,WETRATE)	\
  {						\
    <rate DRYRATE>;				\
    loc orig(0,0);				\
    loc next(DX,DY);				\
    temp swap;					\
    if next.type = wall <ignore =WETRATE/DRYRATE>;	\
    do orig = wall;				\
  }						\

#define CementSet(DRYRATE,WETRATE)	\
  CementSetDir(+1,0,DRYRATE,WETRATE);	\
  CementSetDir(-1,0,DRYRATE,WETRATE);	\
  CementSetDir(0,+1,DRYRATE,WETRATE);	\
  CementSetDir(0,-1,DRYRATE,WETRATE);	\
  CementSetDir(+1,+1,DRYRATE,WETRATE);	\
  CementSetDir(-1,+1,DRYRATE,WETRATE);	\
  CementSetDir(+1,-1,DRYRATE,WETRATE);	\
  CementSetDir(-1,-1,DRYRATE,WETRATE);	\

type cement;
NeumannWalk(.1,.1,.01,.1);
CementSet(.15,.001);

type wall decay(4);
bri = 255 - decay*8;
{
  <rate .0002>;
  loc orig(0,0);
  if orig.decay < 15;
  do orig.decay = orig.decay + 1;
  text "decay" <rate .01> <hue 32>;
}

{
  <rate .01>;
  loc orig(0,0);
  if orig.decay = 15;
  do orig = empty;
}

#define AcidBurnDir(DX,DY,RATE)			\
  {						\
    <rate RATE>;				\
    loc orig(0,0);				\
    loc next(DX,DY);				\
    temp swap;					\
    if next.type != empty;			\
    do next = empty;				\
    do orig = empty;				\
  }						\

#define AcidBurn(RATE)		\
  AcidBurnDir(+1,0,RATE);	\
  AcidBurnDir(-1,0,RATE);	\
  AcidBurnDir(0,+1,RATE);	\
  AcidBurnDir(0,-1,RATE);	\
  AcidBurnDir(+1,+1,RATE);	\
  AcidBurnDir(-1,+1,RATE);	\
  AcidBurnDir(+1,-1,RATE);	\
  AcidBurnDir(-1,-1,RATE);	\

type acid;
bri = 128;
NeumannWalk(.1,.1,.01,.1);
AcidBurn(.15);

#define DirectedStep(DX,DY,DIR,STEP,OSTEP,DIE,ODIE)	\
  {							\
    <rate STEP>;					\
    <overload OSTEP>;					\
    loc orig(0,0);					\
    loc next(DX,DY);					\
    temp swap;						\
    if orig.dir = DIR;					\
    if next.type = empty;				\
    do swap = next;					\
    do next = orig <fail DIE> <overload ODIE>;		\
    do orig = swap;					\
  }							\

#define DirectedTurn(DX,DY,DIR,DIRINC,RATE,SPONTANEOUS)	\
  {							\
    <rate RATE>;					\
    loc orig(0,0);					\
    loc next(DX,DY);					\
    if orig.dir = DIR;					\
    if next.type != empty <ignore =SPONTANEOUS/RATE>;	\
    do orig.dir = orig.dir + DIRINC;			\
  }							\

#define DirectedTurns(DX,DY,DIR,TURN,REVERSE,SPONTANEOUS)		\
  DirectedTurn(DX,DY,DIR,+1,TURN,SPONTANEOUS);				\
  DirectedTurn(DX,DY,DIR,-1,TURN,SPONTANEOUS);				\
  DirectedTurn(DX,DY,DIR,+2,REVERSE,SPONTANEOUS);			\

// dir: 0=north, 1=east, 2=south, 3=west
#define MooreDirectedWalk(STEP,OSTEP,DIE,ODIE,TURN,REVERSE,SPONTANEOUS)	\
  DirectedStep(0,-1,0,STEP,OSTEP,DIE,ODIE);				\
  DirectedStep(+1,0,1,STEP,OSTEP,DIE,ODIE);				\
  DirectedStep(0,+1,2,STEP,OSTEP,DIE,ODIE);				\
  DirectedStep(-1,0,3,STEP,OSTEP,DIE,ODIE);				\
  DirectedTurns(0,-1,0,TURN,REVERSE,SPONTANEOUS);			\
  DirectedTurns(+1,0,1,TURN,REVERSE,SPONTANEOUS);			\
  DirectedTurns(0,+1,2,TURN,REVERSE,SPONTANEOUS);			\
  DirectedTurns(-1,0,3,TURN,REVERSE,SPONTANEOUS);			\
  
#define NomadSpeed .01
type nomad dir(2);
hue = 32;
sat = 255;
bri = 255;
MooreDirectedWalk(NomadSpeed,NomadSpeed,=NomadSpeed/20,=NomadSpeed/5,=NomadSpeed/5,=NomadSpeed/20,=NomadSpeed/100);

init (64,64) cement;

tool "Cement spray" (type cement) (reserve 1000) (size 4);
tool "Acid spray" (type acid) (reserve 1000) (size 4);
tool "Nomad spray" (type nomad) (reserve 1000) (size 4);
